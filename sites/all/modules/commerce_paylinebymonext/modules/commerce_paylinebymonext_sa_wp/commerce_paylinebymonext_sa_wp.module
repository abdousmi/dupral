<?php

/**
 * Implements hook_commerce_payment_method_info().
 */
function commerce_paylinebymonext_sa_wp_commerce_payment_method_info() {
  $payment_methods = array();
  $display_title = t('Payline Web Payment (Simple Auth)');
  $payment_methods['payline_sa_wp'] = array(
    'base' => 'commerce_paylinebymonext_sa_wp',
    'title' => t('Payline Simple Auth Web Payment'),
    'display_title' => $display_title,
    'short_title' => $display_title,
    'description' => t('Monext Payline Web Payment does a simple auth on checkout and do capture for payment
                        only when rules you can configured are fired. By default one default rules fires capture
                        when order status is setted to completed (handly as automatically)'),
    'terminal' => FALSE,
    'offsite' => TRUE,
    'file' => 'includes/commerce_paylinebymonext_sa_wp.payments.inc',
  );
  return $payment_methods;
}

/**
 * Implements hook_commerce_order_status_info_alter to add order status
 *
 * @param $order_statuses
 */
function commerce_paylinebymonext_sa_wp_commerce_order_status_info_alter(&$order_statuses) {
  $order_statuses['payment_failed'] = array(
    'name' => 'payment_failed',
    'title' => t('Payment failed'),
    'state' => 'canceled',
    'weight' => '6',
    'cart' => false
  );
  $order_statuses['authorized'] = array(
    'name' => 'authorized',
    'title' => t('Authorized'),
    'state' => 'pending',
    'weight' => '6',
    'cart' =>false
  );
}

/**
 * Implements hook_commerce_paylinemonext_aoc
 *
 * @param $order
 */
function commerce_paylinebymonext_sa_wp_commerce_paylinemonext_aoc($order) {
  $wrapper = entity_metadata_wrapper('commerce_order', $order);

  $wrapper->status->set('authorized');
  $wrapper->save();

  return $order;
}


/**
 *
 * Implements hook_commerce_payment_transaction_status_info
 *
 * @return array
 */
function commerce_paylinebymonext_sa_wp_commerce_payment_transaction_status_info() {
  $statuses = array();

  // COMMERCE_PAYMENT_STATUS_SUCCESS is a constant defined in the Payment module.
  $statuses[COMMERCE_PAYLINE_TRANSACTION_STATUS_AUTHORIZED] = array(
    'status' => COMMERCE_PAYLINE_TRANSACTION_STATUS_AUTHORIZED,
    'title' => t('Payline authorized'),
    'icon' => drupal_get_path('module', 'commerce_payment') . '/theme/icon-pending.png',
    'total' => TRUE,
  );

  return $statuses;
}

/**
 *
 * Implement hook_TYPE_alter to set the transaction status to payline_authorized
 *
 * @param $status
 * @param $order
 * @param $code
 */
function commerce_paylinebymonext_sa_wp_commerce_paylinebymonext_transaction_status_alter(&$status,$order,$code) {
  if ($order->data['payment_method'] == 'payline_sa_wp|commerce_payment_payline_sa_wp') {
    $status = COMMERCE_PAYLINE_TRANSACTION_STATUS_AUTHORIZED;
  }
}
